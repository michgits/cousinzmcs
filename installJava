#!/bin/bash

export THIS_DIR=$PWD

install_server () {
  choice=$1
  if [[ -z $choice ]]
  then	
    echo -e "\n> installing vanilla..."
    cd JavaInstallScripts
    chmod +x *
    
    ./VanillaInstall
    errorno=${?}
    if [ $errorno -eq 1 ]
    then
      cd $THIS_DIR
      install_server $choice
    fi


  # Vanilla
  elif [[ $choice == 1 ]]
  then
    echo -e "\n> installing vanilla..."
    cd JavaInstallScripts
    chmod +x *

    ./VanillaInstall
    errorno=${?}
    if [ $errorno -eq 1 ]
    then
	    cd $THIS_DIR
      install_server $choice
    fi

  # Paper
  elif [[ $choice == 2 ]]
  then
    echo "> installing paper..."
    cd JavaInstallScripts
    chmod +x *
    ./PaperInstall

  # Forge
  elif [[ $choice == 3 ]]
  then
    echo "> installing forge..."
    cd JavaInstallScripts
    chmod +x *
    ./ForgeInstall

  # Sponge
  elif [[ $choice == 4 ]]
  then
    echo "> installing sponge..."
    cd JavaInstallScripts
    chmod +x *
    ./SpongeInstall

  # Fabric
  elif [[ $choice == 5 ]]
  then
    echo "> installing fabric..."
    cd JavaInstallScripts
    chmod +x *
    ./FabricInstall


  elif [[ $choice == 6 ]];then
    echo "> installing spigot..."
    cd JavaInstallScripts
    chmod +x *
    ./SpigotInstall


  elif [[ $choice == 7 ]];then
    echo "> installing bungeecord..."
    cd JavaInstallScripts
    chmod +x *
    ./BungeecordInstall

  
 # Invaild Input
  else
    echo "invaild responds. please try again."
    ./installJava
  fi
}

#Installing all the dependencise
sudo apt install -y -qq screen neofetch 

echo "export PATH=$PATH:/some/new/path" > ~/.profile
echo "> dependencies installtion completed!"

#Downloading ngrok && Downloading Minecraft Server
mkdir server 

echo ""
echo "-- pick the following server type: --"
echo "type [1] create vanilla Server"
echo "type [2] create paper Server"
echo "type [3] create forge Server"
echo "type [4] create sponge Server"
echo "type [5] create fabric Server"
echo "type [6] create spigot Server (COMPILE)"
echo "type [7] create bungeecord Server (latest)"
choiceForServer=1
read choiceForServer

install_server $choiceForServer

# Backup install playit.gg in case if first one doesn't download
echo "> Installing Playit.gg..."
cd ..
#wget "https://playit.gg/downloads/playit-linux_64-0.4.2-rc1" -O playit 
wget -q "https://playit.gg/downloads/playit-linux_64-0.4.6" -O playit
chmod +x playit
echo "> playit.gg installation completed."
echo ""
echo "-- do you want to start the server now? --"
echo "type [1] for yes"
echo "type [2] for no"

StartServer=2
read StartServer

if [[ -z $StartServer ]]; then
echo "> by default, you selected 'no'."
echo "> you can start the server by do ./startserver"

elif [[ $StartServer == 1 ]]; then
./startserver

elif [[ $StartServer == 2 ]]; then
echo "you picked 'no'."
echo "> you can start the server by do ./startserver"

else
echo "> by Default, you selected 'no'."
echo "> you can start the server by do ./startserver"
fi
